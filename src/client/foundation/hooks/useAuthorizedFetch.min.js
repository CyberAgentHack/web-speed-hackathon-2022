import{useCallback,useEffect,useMemo,useState}from"react";import{useAuth}from"../contexts/AuthContext";export function useAuthorizedFetch(apiPath,fetcher){const{loggedIn:loggedIn,userId:userId}=useAuth(),[result,setResult]=useState({data:null,error:null,loading:!0}),fetch=useCallback(()=>{if(!loggedIn)return;setResult(()=>({data:null,error:null,loading:!0}));const promise=fetcher(apiPath,userId);promise(data=>{setResult(cur=>({...cur,data:data,loading:!1}))}),promise(error=>{setResult(cur=>({...cur,error:error,loading:!1}))})},[apiPath,fetcher,loggedIn,userId]);useEffect(()=>{fetch()},[fetch]);const res=useMemo(()=>({...result,revalidate:fetch}),[fetch,result]);return res}